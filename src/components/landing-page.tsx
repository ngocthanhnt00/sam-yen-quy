'use client'
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Input } from "@/components/ui/input"
import { Star, Shield, Truck, Award, Heart, Sparkles, CheckCircle, ArrowRight } from "lucide-react"
import Image from "next/image"
import Link from "next/link"
import { useState, useEffect } from "react"
import { Swiper, SwiperSlide } from 'swiper/react'
import { Navigation, Pagination, Autoplay } from 'swiper/modules'
import Header from './header'
import Footer from './footer'

// Import Swiper styles
import 'swiper/css'
import 'swiper/css/navigation'
import 'swiper/css/pagination'

export default function Component() {
  const [mockData, setMockData] = useState<any>(null)

  useEffect(() => {
    const fetchMockData = async () => {
      try {
        const response = await fetch('/mock/products.json')
        const data = await response.json()
        setMockData(data)
      } catch (error) {
        console.error('Error loading mock data:', error)
        setMockData({
          products: [],
          testimonials: [],
          features: [],
          benefits: []
        })
      }
    }

    fetchMockData()
  }, [])

  return (
    <div className="flex flex-col min-h-screen bg-gradient-to-br from-amber-50 via-white to-orange-50">
      <Header />

      <main className="flex-1">
        {/* Hero Section */}
        <section className="relative py-12 md:py-16 lg:py-20 overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-br from-amber-100/30 via-orange-100/20 to-amber-50/40" />
          <div className="container relative px-4 md:px-6 mx-auto">
            <div className="grid gap-12 lg:grid-cols-2 lg:gap-16 items-center max-w-6xl mx-auto">
              <div className="space-y-8">
                <div className="space-y-6">
                  <Badge className="bg-gradient-to-r from-amber-100 to-orange-100 text-amber-800 hover:from-amber-200 hover:to-orange-200 px-4 py-2 text-sm font-medium border border-amber-200">
                    üèÜ Y·∫øn s√†o cao c·∫•p t·ª´ thi√™n nhi√™n
                  </Badge>
                  <h1 className="text-3xl font-bold tracking-tight sm:text-4xl md:text-5xl lg:text-6xl leading-tight">
                    <span className="bg-gradient-to-br from-amber-600 via-orange-600 to-amber-700 bg-clip-text text-transparent">
                      Y·∫øn S√†o
                    </span>
                    <br />
                    <span className="text-gray-900">Tinh Hoa S·ª©c Kh·ªèe</span>
                  </h1>
                  <p className="text-base text-gray-600 max-w-[500px] leading-relaxed">
                    Kh√°m ph√° s·ª©c m·∫°nh c·ªßa y·∫øn s√†o thi√™n nhi√™n 100% - ngu·ªìn dinh d∆∞·ª°ng qu√Ω gi√° gi√∫p n√¢ng cao s·ª©c kh·ªèe,
                    l√†m ƒë·∫πp da v√† tƒÉng c∆∞·ªùng s·ª©c ƒë·ªÅ kh√°ng t·ª± nhi√™n.
                  </p>
                </div>
                <div className="flex flex-col sm:flex-row gap-3">
                  <Button
                    size="lg"
                    className="bg-gradient-to-br from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600 text-sm px-6 py-3 shadow-md hover:shadow-lg transition-all duration-200 group"
                  >
                    Mua ngay - Gi·∫£m 30%
                    <ArrowRight className="ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform" />
                  </Button>
                  <Button
                    size="lg"
                    variant="outline"
                    className="border-2 border-amber-300 text-amber-700 hover:bg-amber-50 text-sm px-6 py-3 bg-white/80 backdrop-blur"
                  >
                    T√¨m hi·ªÉu th√™m
                  </Button>
                </div>
                <div className="flex items-center gap-6 pt-4">
                  <div className="flex items-center gap-2">
                    <div className="flex -space-x-1">
                      {[1, 2, 3, 4].map((i) => (
                        <div
                          key={i}
                          className="w-6 h-6 rounded-full bg-gradient-to-br from-amber-400 to-orange-400 border-2 border-white shadow-sm"
                        />
                      ))}
                    </div>
                    <span className="text-xs text-gray-600 font-medium">1000+ kh√°ch h√†ng tin t∆∞·ªüng</span>
                  </div>
                  <div className="flex items-center gap-1">
                    {[1, 2, 3, 4, 5].map((i) => (
                      <Star key={i} className="w-3 h-3 fill-amber-400 text-amber-400" />
                    ))}
                    <span className="text-xs text-gray-600 ml-1 font-medium">4.9/5</span>
                  </div>
                </div>
              </div>
              <div className="relative">
                <div className="absolute inset-0 bg-gradient-to-br from-amber-200 via-orange-200 to-amber-300 rounded-3xl blur-3xl opacity-40 animate-pulse" />
                <div className="relative">
                  <div className="absolute -inset-6 bg-gradient-to-br from-amber-200 to-orange-200 rounded-3xl blur-xl opacity-30" />
                  <Image
                    src="/images/products/3.jpg"
                    alt="Y·∫øn s√†o cao c·∫•p"
                    width={600}
                    height={700}
                    className="relative rounded-3xl shadow-2xl border-4 border-white"
                  />
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* Features Section */}
        <section className="py-12 bg-white">
          <div className="container px-4 md:px-6 mx-auto">
            <div className="text-center space-y-4 mb-12">
              <Badge className="bg-gradient-to-r from-amber-100 to-orange-100 text-amber-800 px-3 py-1 text-xs font-medium border border-amber-200">
                T·∫°i sao ch·ªçn ch√∫ng t√¥i
              </Badge>
              <h2 className="text-2xl font-bold tracking-tight sm:text-3xl md:text-4xl">Cam k·∫øt ch·∫•t l∆∞·ª£ng h√†ng ƒë·∫ßu</h2>
              <p className="text-base text-gray-600 max-w-[600px] mx-auto leading-relaxed">
                Ch√∫ng t√¥i mang ƒë·∫øn nh·ªØng s·∫£n ph·∫©m y·∫øn s√†o ch·∫•t l∆∞·ª£ng cao nh·∫•t v·ªõi quy tr√¨nh s·∫£n xu·∫•t kh√©p k√≠n
              </p>
            </div>
            <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
              <Card className="border-0 shadow-xl hover:shadow-2xl transition-all duration-300 hover:-translate-y-2 bg-gradient-to-br from-white to-amber-50/30">
                <CardHeader className="text-center pb-4">
                  <div className="w-12 h-12 mx-auto bg-gradient-to-br from-amber-500 to-orange-500 rounded-lg flex items-center justify-center mb-4 shadow-sm">
                    <Shield className="w-6 h-6 text-white" />
                  </div>
                  <CardTitle className="text-lg font-bold">100% Thi√™n Nhi√™n</CardTitle>
                </CardHeader>
                <CardContent className="text-center">
                  <p className="text-gray-600 leading-relaxed text-base">
                    Y·∫øn s√†o ƒë∆∞·ª£c thu ho·∫°ch t·ª´ nh·ªØng hang ƒë·ªông t·ª± nhi√™n, kh√¥ng ch·∫•t b·∫£o qu·∫£n
                  </p>
                </CardContent>
              </Card>
              <Card className="border-0 shadow-xl hover:shadow-2xl transition-all duration-300 hover:-translate-y-2 bg-gradient-to-br from-white to-orange-50/30">
                <CardHeader className="text-center pb-4">
                  <div className="w-12 h-12 mx-auto bg-gradient-to-br from-amber-500 to-orange-500 rounded-lg flex items-center justify-center mb-4 shadow-sm">
                    <Award className="w-6 h-6 text-white" />
                  </div>
                  <CardTitle className="text-lg font-bold">Ch·ª©ng Nh·∫≠n Ch·∫•t L∆∞·ª£ng</CardTitle>
                </CardHeader>
                <CardContent className="text-center">
                  <p className="text-gray-600 leading-relaxed text-base">ƒê∆∞·ª£c ki·ªÉm ƒë·ªãnh b·ªüi c√°c t·ªï ch·ª©c uy t√≠n, ƒë·∫£m b·∫£o ti√™u chu·∫©n xu·∫•t kh·∫©u</p>
                </CardContent>
              </Card>
              <Card className="border-0 shadow-xl hover:shadow-2xl transition-all duration-300 hover:-translate-y-2 bg-gradient-to-br from-white to-amber-50/30">
                <CardHeader className="text-center pb-4">
                  <div className="w-12 h-12 mx-auto bg-gradient-to-br from-amber-500 to-orange-500 rounded-lg flex items-center justify-center mb-4 shadow-sm">
                    <Truck className="w-6 h-6 text-white" />
                  </div>
                  <CardTitle className="text-lg font-bold">Giao H√†ng Nhanh</CardTitle>
                </CardHeader>
                <CardContent className="text-center">
                  <p className="text-gray-600 leading-relaxed text-base">Giao h√†ng to√†n qu·ªëc trong 24h, ƒë√≥ng g√≥i c·∫©n th·∫≠n, b·∫£o qu·∫£n l·∫°nh</p>
                </CardContent>
              </Card>
              <Card className="border-0 shadow-xl hover:shadow-2xl transition-all duration-300 hover:-translate-y-2 bg-gradient-to-br from-white to-orange-50/30">
                <CardHeader className="text-center pb-4">
                  <div className="w-12 h-12 mx-auto bg-gradient-to-br from-amber-500 to-orange-500 rounded-lg flex items-center justify-center mb-4 shadow-sm">
                    <Heart className="w-6 h-6 text-white" />
                  </div>
                  <CardTitle className="text-lg font-bold">T∆∞ V·∫•n Chuy√™n Nghi·ªáp</CardTitle>
                </CardHeader>
                <CardContent className="text-center">
                  <p className="text-gray-600 leading-relaxed text-base">ƒê·ªôi ng≈© chuy√™n gia dinh d∆∞·ª°ng t∆∞ v·∫•n c√°ch s·ª≠ d·ª•ng hi·ªáu qu·∫£ nh·∫•t</p>
                </CardContent>
              </Card>
            </div>
          </div>
        </section>

        {/* Products Section */}
        <section id="products" className="py-12 bg-gradient-to-br from-amber-50 via-white to-orange-50">
          <div className="container px-4 md:px-6 mx-auto">
            <div className="text-center space-y-4 mb-8">
              <Badge className="bg-gradient-to-r from-amber-100 to-orange-100 text-amber-800 px-3 py-1 text-xs font-medium border border-amber-200">
                S·∫£n ph·∫©m n·ªïi b·∫≠t
              </Badge>
              <h2 className="text-2xl font-bold tracking-tight sm:text-3xl md:text-4xl">B·ªô s∆∞u t·∫≠p y·∫øn s√†o cao c·∫•p</h2>
            </div>

            {!mockData ? (
              <div className="flex justify-center items-center py-12">
                <div className="text-center space-y-4">
                  <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-amber-500 mx-auto"></div>
                  <p className="text-gray-600">ƒêang t·∫£i s·∫£n ph·∫©m...</p>
                </div>
              </div>
            ) : mockData.products && mockData.products.length > 0 ? (
              <div className="relative">
                <Swiper
                  modules={[Navigation, Pagination, Autoplay]}
                  spaceBetween={30}
                  slidesPerView={3}
                  navigation={{
                    nextEl: '.swiper-button-next',
                    prevEl: '.swiper-button-prev',
                  }}
                  pagination={{
                    clickable: true,
                    dynamicBullets: true,
                  }}
                  autoplay={{
                    delay: 4000,
                    disableOnInteraction: false,
                    pauseOnMouseEnter: true,
                  }}
                  loop={true}
                  breakpoints={{
                    320: {
                      slidesPerView: 1,
                      spaceBetween: 10,
                    },
                    640: {
                      slidesPerView: 2,
                      spaceBetween: 20,
                    },
                    1024: {
                      slidesPerView: 3,
                      spaceBetween: 30,
                    },
                    1280: {
                      slidesPerView: 4,
                      spaceBetween: 30,
                    },
                  }}
                  className="products-swiper"
                >
                  {mockData.products.map((product: any) => (
                    <SwiperSlide key={product.id}>
                      <Card className="shadow-md hover:shadow-lg transition-all duration-300 bg-white overflow-hidden group h-[500px] flex flex-col">
                        <div className="relative h-48 flex-shrink-0">
                          <Image
                            src={product.image}
                            alt={product.name}
                            width={300}
                            height={200}
                            className="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                          />
                          <Badge className={`absolute top-3 left-3 bg-gradient-to-r ${product.badgeColor} text-white shadow text-xs px-2 py-0.5`}>
                            {product.badge}
                          </Badge>
                        </div>
                        <div className="flex flex-col flex-1 p-4 min-h-0">
                          <div className="mb-3 flex-shrink-0">
                            <h3 className="text-base font-semibold text-gray-900 mb-1 line-clamp-2">
                              <Link href={`/${product.id}`}>{product.name}</Link>
                            </h3>
                            <p className="text-xs text-gray-500 line-clamp-2">{product.description}</p>
                          </div>

                          <div className="flex items-center justify-between mb-3 flex-shrink-0">
                            <span className="text-lg font-bold text-amber-600">{product.price}</span>
                            <span className="text-sm text-gray-400 line-through">{product.originalPrice}</span>
                          </div>

                          <ul className="space-y-1 text-xs text-gray-600 mb-4 flex-1 min-h-0">
                            <li className="flex items-center gap-2">
                              <CheckCircle className="w-3 h-3 text-green-500 flex-shrink-0" />
                              <span>Tr·ªçng l∆∞·ª£ng: {product.weight}</span>
                            </li>
                            <li className="flex items-center gap-2">
                              <CheckCircle className="w-3 h-3 text-green-500 flex-shrink-0" />
                              <span>ƒê·ªô ·∫©m: {"<"} {product.moisture}%</span>
                            </li>
                            <li className="flex items-center gap-2">
                              <CheckCircle className="w-3 h-3 text-green-500 flex-shrink-0" />
                              <span>B·∫£o qu·∫£n: {product.storage} th√°ng</span>
                            </li>
                          </ul>

                          <Button className="w-full bg-gradient-to-br from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600 text-sm py-2.5 flex-shrink-0">
                            Th√™m v√†o gi·ªè
                          </Button>
                        </div>
                      </Card>
                    </SwiperSlide>
                  ))}
                </Swiper>

                {/* Custom Navigation Buttons */}
                <div className="swiper-button-prev absolute left-4 top-1/2 transform -translate-y-1/2 z-10"></div>
                <div className="swiper-button-next absolute right-4 top-1/2 transform -translate-y-1/2 z-10"></div>
              </div>
            ) : (
              <div className="text-center py-12">
                <div className="space-y-4">
                  <div className="w-16 h-16 mx-auto bg-gradient-to-br from-amber-100 to-orange-100 rounded-full flex items-center justify-center">
                    <Sparkles className="w-8 h-8 text-amber-500" />
                  </div>
                  <h3 className="text-lg font-semibold text-gray-900">Kh√¥ng c√≥ s·∫£n ph·∫©m</h3>
                  <p className="text-gray-600">Vui l√≤ng th·ª≠ l·∫°i sau</p>
                </div>
              </div>
            )}
          </div>
        </section>

        {/* Benefits Section */}
        <section id="benefits" className="py-16 bg-white">
          <div className="container px-4 md:px-6 mx-auto">
            <div className="grid gap-16 lg:grid-cols-2 lg:gap-20 items-center">
              <div className="space-y-8">
                <div className="space-y-6">
                  <Badge className="bg-gradient-to-r from-amber-100 to-orange-100 text-amber-800 px-4 py-2 text-sm font-medium border border-amber-200">
                    L·ª£i √≠ch s·ª©c kh·ªèe
                  </Badge>
                  <h2 className="text-3xl font-bold tracking-tight sm:text-4xl md:text-5xl leading-tight">
                    T·∫°i sao y·∫øn s√†o l√†
                    <span className="bg-gradient-to-br from-amber-600 via-orange-600 to-amber-700 bg-clip-text text-transparent">
                      {" "}
                      si√™u th·ª±c ph·∫©m
                    </span>
                  </h2>
                  <p className="text-lg text-gray-600 leading-relaxed">
                    Y·∫øn s√†o ch·ª©a h√†ng trƒÉm ch·∫•t dinh d∆∞·ª°ng qu√Ω gi√°, ƒë∆∞·ª£c khoa h·ªçc ch·ª©ng minh c√≥ t√°c d·ª•ng tuy·ªát v·ªùi cho
                    s·ª©c kh·ªèe
                  </p>
                </div>
                <div className="grid gap-6">
                  <div className="flex gap-6 p-6 bg-gradient-to-br from-amber-50 to-orange-50 rounded-xl">
                    <div className="w-16 h-16 bg-gradient-to-br from-amber-500 to-orange-500 rounded-xl flex items-center justify-center flex-shrink-0 shadow-md">
                      <Sparkles className="w-8 h-8 text-white" />
                    </div>
                    <div>
                      <h3 className="text-xl font-bold mb-3">L√†m ƒë·∫πp da t·ª´ b√™n trong</h3>
                      <p className="text-gray-600 leading-relaxed text-sm">
                        Collagen v√† acid amin trong y·∫øn s√†o gi√∫p da m·ªãn m√†ng, sƒÉn ch·∫Øc v√† ch·ªëng l√£o h√≥a hi·ªáu qu·∫£
                      </p>
                    </div>
                  </div>
                  <div className="flex gap-6 p-6 bg-gradient-to-br from-orange-50 to-amber-50 rounded-xl">
                    <div className="w-16 h-16 bg-gradient-to-br from-amber-500 to-orange-500 rounded-xl flex items-center justify-center flex-shrink-0 shadow-md">
                      <Heart className="w-8 h-8 text-white" />
                    </div>
                    <div>
                      <h3 className="text-xl font-bold mb-3">TƒÉng c∆∞·ªùng s·ª©c ƒë·ªÅ kh√°ng</h3>
                      <p className="text-gray-600 leading-relaxed text-sm">
                        Protein v√† kho√°ng ch·∫•t gi√∫p tƒÉng c∆∞·ªùng h·ªá mi·ªÖn d·ªãch, ch·ªëng l·∫°i b·ªánh t·∫≠t v√† m·ªát m·ªèi
                      </p>
                    </div>
                  </div>
                  <div className="flex gap-6 p-6 bg-gradient-to-br from-amber-50 to-orange-50 rounded-xl">
                    <div className="w-16 h-16 bg-gradient-to-br from-amber-500 to-orange-500 rounded-xl flex items-center justify-center flex-shrink-0 shadow-md">
                      <Shield className="w-8 h-8 text-white" />
                    </div>
                    <div>
                      <h3 className="text-xl font-bold mb-3">B·ªï ph·ªïi, d∆∞·ª°ng th·∫≠n</h3>
                      <p className="text-gray-600 leading-relaxed text-sm">
                        Theo ƒê√¥ng y, y·∫øn s√†o c√≥ t√°c d·ª•ng b·ªï ph·ªïi, d∆∞·ª°ng th·∫≠n, tƒÉng c∆∞·ªùng sinh l·ª±c
                      </p>
                    </div>
                  </div>
                </div>
              </div>
              <div className="relative">
                <div className="absolute inset-0 bg-gradient-to-br from-amber-200 via-orange-200 to-amber-300 rounded-3xl blur-3xl opacity-30" />
                <Image
                  src="/images/products/3.jpg"
                  alt="L·ª£i √≠ch y·∫øn s√†o"
                  width={600}
                  height={700}
                  className="relative rounded-3xl shadow-2xl border-4 border-white"
                />
              </div>
            </div>
          </div>
        </section>

        {/* Testimonials Section */}
        <section id="testimonials" className="py-16 bg-gradient-to-br from-amber-50 via-white to-orange-50">
          <div className="container px-4 md:px-6 mx-auto">
            <div className="text-center space-y-6 mb-16">
              <Badge className="bg-gradient-to-r from-amber-100 to-orange-100 text-amber-800 px-4 py-2 text-sm font-medium border border-amber-200">
                Kh√°ch h√†ng n√≥i g√¨
              </Badge>
              <h2 className="text-3xl font-bold tracking-tight sm:text-4xl md:text-5xl">
                H√†ng ngh√¨n kh√°ch h√†ng h√†i l√≤ng
              </h2>
            </div>

            {!mockData ? (
              <div className="flex justify-center items-center py-12">
                <div className="text-center space-y-4">
                  <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-amber-500 mx-auto"></div>
                  <p className="text-gray-600">ƒêang t·∫£i ƒë√°nh gi√°...</p>
                </div>
              </div>
            ) : mockData.testimonials && mockData.testimonials.length > 0 ? (
              <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                {mockData.testimonials.map((testimonial: any) => (
                  <Card key={testimonial.id} className="border-0 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-2 bg-white">
                    <CardContent className="pt-6 pb-6">
                      <div className="flex items-center gap-1 mb-4">
                        {[...Array(testimonial.rating)].map((_, i) => (
                          <Star key={i} className="w-4 h-4 fill-amber-400 text-amber-400" />
                        ))}
                      </div>
                      <p className="text-gray-600 mb-4 leading-relaxed text-sm">
                        {testimonial.comment}
                      </p>
                      <div className="flex items-center gap-3">
                        <Image src={testimonial.avatar} alt={testimonial.name} width={40} height={40} className="rounded-full" />
                        <div>
                          <p className="font-bold text-base">{testimonial.name}</p>
                          <p className="text-gray-500 text-sm">{testimonial.location}</p>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            ) : (
              <div className="text-center py-12">
                <div className="space-y-4">
                  <div className="w-16 h-16 mx-auto bg-gradient-to-br from-amber-100 to-orange-100 rounded-full flex items-center justify-center">
                    <Sparkles className="w-8 h-8 text-amber-500" />
                  </div>
                  <h3 className="text-lg font-semibold text-gray-900">Kh√¥ng c√≥ ƒë√°nh gi√°</h3>
                  <p className="text-gray-600">Vui l√≤ng th·ª≠ l·∫°i sau</p>
                </div>
              </div>
            )}
          </div>
        </section>

        {/* CTA Section */}
        <section className="py-16 bg-gradient-to-br from-amber-500 via-orange-500 to-amber-600 relative overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-br from-amber-600/20 to-orange-600/20" />
          <div className="container relative px-4 md:px-6 mx-auto">
            <div className="text-center space-y-8 text-white">
              <h2 className="text-3xl font-bold tracking-tight sm:text-4xl md:text-5xl">ƒê·∫∑t h√†ng ngay h√¥m nay</h2>
              <p className="text-lg opacity-90 max-w-[500px] mx-auto leading-relaxed">
                Nh·∫≠n ngay ∆∞u ƒë√£i 30% cho ƒë∆°n h√†ng ƒë·∫ßu ti√™n. Mi·ªÖn ph√≠ giao h√†ng to√†n qu·ªëc.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center items-center max-w-xl mx-auto">
                <Input placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i c·ªßa b·∫°n" className="max-w-sm bg-white/90 text-gray-900 border-0 shadow-md text-base py-4" />
                <Button size="lg" className="bg-white text-amber-600 hover:bg-gray-100 px-8 py-4 text-base font-medium shadow-md hover:shadow-lg transition-all duration-200">
                  Nh·∫≠n t∆∞ v·∫•n mi·ªÖn ph√≠
                </Button>
              </div>
              <p className="text-sm opacity-75">* Cam k·∫øt kh√¥ng spam. Th√¥ng tin c·ªßa b·∫°n ƒë∆∞·ª£c b·∫£o m·∫≠t tuy·ªát ƒë·ªëi.</p>
            </div>
          </div>
        </section>
      </main>

      <Footer />
    </div>
  )
}
