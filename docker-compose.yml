version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jiotech_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: jiotech
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123@Long!!
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - jiotech_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d jiotech"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: jiotech_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - jiotech_network

  # Application Service (ví dụ Node.js app)
  app:
    image: node:18-alpine
    container_name: jiotech_app
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./app:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=jiotech
      - DB_USER=postgres
      - DB_PASSWORD=123@Long!!
    command: sh -c "npm install && npm start"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - jiotech_network

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: jiotech_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jiotech_network
    command: redis-server --appendonly yes

  # Adminer - Database management tool
  adminer:
    image: adminer:latest
    container_name: jiotech_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - jiotech_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  jiotech_network:
    driver: bridge